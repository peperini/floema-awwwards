/*! For license information please see main.f3e931200e7e34b1db1e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema_awwwards("main",{"./app/components/Canvas/About/Gallery.js":(t,s,e)=>{e.r(s),e.d(s,{default:()=>n});var i=e("./node_modules/ogl/src/core/Transform.js"),r=e("./node_modules/lodash/map.js"),l=e.n(r),o=e("./node_modules/gsap/index.js"),h=e("./app/components/Canvas/About/Media.js");class n{constructor({element:t,geometry:s,index:e,gl:r,scene:l,sizes:o}){this.element=t,this.geometry=s,this.index=e,this.gl=r,this.scene=l,this.sizes=o,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,lerp:.1},this.createMedias(),this.group.setParent(this.scene)}createMedias(){this.mediasElements=this.element.querySelectorAll(".about__gallery__media"),this.media=l()(this.mediasElements,((t,s)=>new h.default({element:t,geometry:this.geometry,index:s,gl:this.gl,scene:this.group,sizes:this.sizes})))}onResize(t){this.bounds=this.element.getBoundingClientRect(),this.sizes=t.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,l()(this.medias,(s=>s.onResize(t,this.scroll)))}onTouchDown({x:t,y:s}){this.scroll.current=this.scroll}onTouchMove({x:t,y:s}){const e=t.start-t.end;this.scroll.target=this.scroll.current-e}onTouchUp({x:t,y:s}){}update(){this.bounds&&(this.scroll.current<this.scroll.target?this.direction="right":this.scroll.current>this.scroll.target&&(this.direction="left"),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),l()(this.medias,((t,s)=>{const e=t.mesh.scale.x/2;if("left"===this.direction){t.mesh.position.x+e<-this.sizes.width/2&&(t.extra.x+=this.gallerySizes.width,t.mesh.rotation.z=o.default.utils.random(.02*-Math.PI,.02*Math.PI))}else if("right"===this.direction){t.mesh.position.x-e>this.sizes.width/2&&(t.extra.x-=this.gallerySizes.width,t.mesh.rotation.z=o.default.utils.random(.02*-Math.PI,.02*Math.PI))}t.update(this.scroll)})))}}}},(function(t){t.h=()=>"d48d5f4cf7da0cca0a76"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU1VLE9BQWtCLEtBQVZDLEtBQUtDLEdBQXFCLElBQVZELEtBQUtDLElBRXhFLENBRUFsQyxFQUFNbUIsT0FBTy9CLEtBQUtHLE9BQU8sSUFFakMsa0JDOUdKNEMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS1hd3d3YXJkcy8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9BYm91dC9HYWxsZXJ5LmpzIiwid2VicGFjazovL2Zsb2VtYS1hd3d3YXJkcy93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNmb3JtIH0gZnJvbSAnb2dsJ1xyXG5cclxuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xyXG5pbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xyXG5cclxuaW1wb3J0IE1lZGlhIGZyb20gJy4vTWVkaWEnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYWxsZXJ5IHtcclxuICAgIGNvbnN0cnVjdG9yICh7IGVsZW1lbnQsIGdlb21ldHJ5LCBpbmRleCwgZ2wsIHNjZW5lLCBzaXplcyB9KSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFxyXG4gICAgICAgIHRoaXMuZ2VvbWV0cnkgPSBnZW9tZXRyeVxyXG4gICAgICAgIHRoaXMuaW5kZXggPSBpbmRleFxyXG4gICAgICAgIHRoaXMuZ2wgPSBnbFxyXG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxyXG4gICAgICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xyXG5cclxuICAgICAgICB0aGlzLmdyb3VwID0gbmV3IFRyYW5zZm9ybSgpXHJcblxyXG4gICAgICAgIHRoaXMuc2Nyb2xsID0ge1xyXG4gICAgICAgICAgICBjdXJyZW50OiAwLFxyXG4gICAgICAgICAgICB0YXJnZXQ6IDAsXHJcbiAgICAgICAgICAgIGxhc3Q6IDAsXHJcbiAgICAgICAgICAgIGxlcnA6IDAuMVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5jcmVhdGVNZWRpYXMoKVxyXG5cclxuICAgICAgICB0aGlzLmdyb3VwLnNldFBhcmVudCh0aGlzLnNjZW5lKVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZU1lZGlhcyAoKSB7XHJcbiAgICAgICAgdGhpcy5tZWRpYXNFbGVtZW50cyA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWJvdXRfX2dhbGxlcnlfX21lZGlhJylcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLm1lZGlhID0gbWFwKHRoaXMubWVkaWFzRWxlbWVudHMsIChlbGVtZW50LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IE1lZGlhKHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcclxuICAgICAgICAgICAgICAgIGluZGV4LFxyXG4gICAgICAgICAgICAgICAgZ2w6IHRoaXMuZ2wsXHJcbiAgICAgICAgICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcclxuICAgICAgICAgICAgICAgIHNpemVzOiB0aGlzLnNpemVzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBFdmVudHNcclxuXHJcbiAgICBvblJlc2l6ZSAoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmJvdW5kcyA9IHRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxyXG5cclxuICAgICAgICB0aGlzLnNpemVzID0gZXZlbnQuc2l6ZXNcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLndpZHRoID0gdGhpcy5ib3VuZHMud2lkdGggLyB3aW5kb3cuaW5uZXJXaWR0aCAqIHRoaXMuc2l6ZXMud2lkdGhcclxuXHJcbiAgICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IHRoaXMuc2Nyb2xsLnRhcmdldCA9IDBcclxuXHJcbiAgICAgICAgbWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5vblJlc2l6ZShldmVudCwgdGhpcy5zY3JvbGwpKVxyXG4gICAgfVxyXG5cclxuICAgIG9uVG91Y2hEb3duICh7IHgsIHkgfSkge1xyXG4gICAgICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSB0aGlzLnNjcm9sbFxyXG4gICAgfVxyXG5cclxuICAgIG9uVG91Y2hNb3ZlICh7IHgsIHkgfSkge1xyXG4gICAgICAgIGNvbnN0IGRpc3RhbmNlID0geC5zdGFydCAtIHguZW5kXHJcblxyXG4gICAgICAgIHRoaXMuc2Nyb2xsLnRhcmdldCA9IHRoaXMuc2Nyb2xsLmN1cnJlbnQgLSBkaXN0YW5jZVxyXG4gICAgfVxyXG5cclxuICAgIG9uVG91Y2hVcCAoeyB4LCB5IH0pIHtcclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIFVwZGF0ZVxyXG5cclxuICAgIHVwZGF0ZSAoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmJvdW5kcykgcmV0dXJuXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNjcm9sbC5jdXJyZW50IDwgdGhpcy5zY3JvbGwudGFyZ2V0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ3JpZ2h0J1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zY3JvbGwuY3VycmVudCA+IHRoaXMuc2Nyb2xsLnRhcmdldCkge1xyXG4gICAgICAgICAgICB0aGlzLmRpcmVjdGlvbiA9ICdsZWZ0J1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnNjcm9sbC5jdXJyZW50ID0gR1NBUC51dGlscy5pbnRlcnBvbGF0ZSh0aGlzLnNjcm9sbC5jdXJyZW50LCB0aGlzLnNjcm9sbC50YXJnZXQsIHRoaXMuc2Nyb2xsLmxlcnApXHJcblxyXG4gICAgICAgIG1hcCh0aGlzLm1lZGlhcywgKG1lZGlhLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBzY2FsZVggPSBtZWRpYS5tZXNoLnNjYWxlLnggLyAyXHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5kaXJlY3Rpb24gPT09ICdsZWZ0Jykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgeCA9IG1lZGlhLm1lc2gucG9zaXRpb24ueCArIHNjYWxlWFxyXG5cclxuICAgICAgICAgICAgICAgIGlmICh4IDwgLXRoaXMuc2l6ZXMud2lkdGggLyAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVkaWEuZXh0cmEueCArPSB0aGlzLmdhbGxlcnlTaXplcy53aWR0aFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5tZXNoLnJvdGF0aW9uLnogPSBHU0FQLnV0aWxzLnJhbmRvbSgtTWF0aC5QSSAqIDAuMDIsIE1hdGguUEkgKiAwLjAyKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAncmlnaHQnKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB4ID0gbWVkaWEubWVzaC5wb3NpdGlvbi54IC0gc2NhbGVYXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHggPiB0aGlzLnNpemVzLndpZHRoIC8gMikge1xyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLmV4dHJhLnggLT0gdGhpcy5nYWxsZXJ5U2l6ZXMud2lkdGhcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5tZXNoLnJvdGF0aW9uLnogPSBHU0FQLnV0aWxzLnJhbmRvbSgtTWF0aC5QSSAqIDAuMDIsIE1hdGguUEkgKiAwLjAyKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBtZWRpYS51cGRhdGUodGhpcy5zY3JvbGwpXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImQ0OGQ1ZjRjZjdkYTBjY2EwYTc2XCIpIl0sIm5hbWVzIjpbIkdhbGxlcnkiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJnZW9tZXRyeSIsImluZGV4IiwiZ2wiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImdyb3VwIiwiVHJhbnNmb3JtIiwic2Nyb2xsIiwiY3VycmVudCIsInRhcmdldCIsImxhc3QiLCJsZXJwIiwiY3JlYXRlTWVkaWFzIiwic2V0UGFyZW50IiwibWVkaWFzRWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWVkaWEiLCJtYXAiLCJNZWRpYSIsIm9uUmVzaXplIiwiZXZlbnQiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJtZWRpYXMiLCJvblRvdWNoRG93biIsIngiLCJ5Iiwib25Ub3VjaE1vdmUiLCJkaXN0YW5jZSIsInN0YXJ0IiwiZW5kIiwib25Ub3VjaFVwIiwidXBkYXRlIiwiZGlyZWN0aW9uIiwiR1NBUCIsInV0aWxzIiwiaW50ZXJwb2xhdGUiLCJzY2FsZVgiLCJtZXNoIiwic2NhbGUiLCJwb3NpdGlvbiIsImV4dHJhIiwiZ2FsbGVyeVNpemVzIiwicm90YXRpb24iLCJ6IiwicmFuZG9tIiwiTWF0aCIsIlBJIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9